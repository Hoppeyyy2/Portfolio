import Head from 'next/head'
import styled from "styled-components"
import Nav from 'comp/Nav'
import styles from '@/styles/Home.module.css'
import Sidebar from '@/comp/Sidebar'
import CurveText from '@/comp/CurveText'
import { useEffect, useState } from "react";
import { useTheme } from "@/utils/provider";
import {bg,letter} from "@/utils/variables";

const MainStructure = styled.div`
display:flex;
flex-direction:row;
background:${(props)=> props.bg};
padding:0 40px;
width:100vw;
`
const LeftSideCont = styled.div`
position:fixed;
top:10rem;
@media only screen and (min-width: 1200px) {
top:18rem;
}
@media only screen and (max-width: 992px) {
top:-1rem;
}
@media only screen and (max-width: 653px) {
  top:-6rem;
  }
  
@media only screen and (orientation: portrait) {
    top:35rem;
}
`;
const RightSideCont = styled.div`
position:fixed;
top:23rem;
right:3rem;
@media only screen and (min-width: 1200px) {
top:30rem;
right:6rem;
}
@media only screen and (max-width: 992px) {
top:10rem;
right:2rem;
}
@media only screen and (max-width: 653px) {
  top:6rem;
  }
  
@media only screen and (orientation: portrait) {
    top:45rem;
}
`;
const Main = styled.div`
display: flex;
flex-direction: column;
padding:1.0rem;
min-height: 100vh;
background:${(props)=>props.bg};
width:100%;
`
const TitleCont = styled.div`
display:flex;
@media only screen and (min-width: 1200px) {
  padding:6rem;
  padding-top:20rem;
}
@media only screen and (min-width: 600px) {
  padding:6rem;
  padding-top:12rem;
}
@media only screen and (max-width: 600px) {
  padding:1rem;
  padding-top:15rem;
}
@media only screen and (max-width: 300px) {
  padding:1rem;
  padding-top:10rem;
}
`;
const Title = styled.h1`
font-family: 'Des Morgan', sans-serif;
font-weight:100;
color:${(props)=>props.color};
font-size:44px;
opacity:0.8;

@media only screen and (min-width: 992px) {
  font-size:128px;
}
@media only screen and (min-width: 768px) {
  font-size:88px;
}
@media only screen and (max-width: 600px) {
  font-size:64px;
}
@media only screen and (max-width: 300px) {
  font-size:44px;
}

`;


export default function Test() {
  const [color, setColor] = useState(true);
  const { theme, setTheme } = useTheme();

  const onChangeColor = () => {
    if(color === false){
      setTheme(theme === "dark" ? "light":"dark");
      setColor(true);
    }else if(color === true){
      setTheme(theme === "dark" ? "light":"dark");
      setColor(false);
    }
  };
  return (
    <>
      <Head>
        <title>Chisaki Nakamura</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/logo_pink.svg" />
      </Head>
      <Nav/>
      <MainStructure>
        {/*---------------------------- SNS Links ---------------------------*/}
      <LeftSideCont>
        <Sidebar
        github_src={theme === "light" ? "/sns/github.svg":"/sns/Dgithub.svg"}
        linkedin_src={theme === "light" ? "/sns/linkedin.svg":"/sns/Dlinkedin.svg"}
        behance_src={theme === "light" ? "/sns/behance.svg":"/sns/Dbehance.svg"}
        />
      </LeftSideCont>
      {/*---------------------------- Main Contents From Here ---------------------------*/}
      <Main>
        {/*---------------------------- Home ---------------------------*/}
      <TitleCont id="home">
        <Title color={letter[theme]}>Chisaki Nakamura</Title>
      </TitleCont>

      </Main>
      {/*---------------------------- Main Contents Finish Here ---------------------------*/}

      {/*---------------------------- Color Mode ---------------------------*/}
      <RightSideCont>
      <CurveText
      handleColor={()=>onChangeColor()}
      Textcolor={letter[theme]}
      Text={theme === "light"?"DARK MODE DARK MODE":"LIGHTMODE LIGHTMODE"}
      />
      </RightSideCont>
      </MainStructure>
    </>
  )
}
